{"ast":null,"code":"import React from\"react\";var _ref2=/*#__PURE__*/React.createElement(\"span\",{className:\"icon-star\"});export default function Task(_ref){var _ref$task=_ref.task,id=_ref$task.id,title=_ref$task.title,state=_ref$task.state,onArchiveTask=_ref.onArchiveTask,onPinTask=_ref.onPinTask;return/*#__PURE__*/React.createElement(\"div\",{className:\"list-item \".concat(state)},/*#__PURE__*/React.createElement(\"label\",{className:\"checkbox\"},/*#__PURE__*/React.createElement(\"input\",{type:\"checkbox\",defaultChecked:\"TASK_ARCHIVED\"===state,disabled:!0,name:\"checked\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"checkbox-custom\",onClick:function onClick(){return onArchiveTask(id)}})),/*#__PURE__*/React.createElement(\"div\",{className:\"title\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:title,readOnly:!0,placeholder:\"Input title\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"actions\",onClick:function onClick(event){return event.stopPropagation()}},\"TASK_ARCHIVED\"!==state&&/*#__PURE__*/ // eslint-disable-next-line jsx-a11y/anchor-is-valid\nReact.createElement(\"a\",{onClick:function onClick(){return onPinTask(id)}},_ref2)))}Task.displayName=\"Task\";Task.__docgenInfo={description:\"\",methods:[],displayName:\"Task\",props:{task:{type:{name:\"shape\",value:{id:{name:\"string\",required:!0},title:{name:\"string\",required:!0},state:{name:\"string\",required:!0}}},required:!1,description:\"\"},onArchiveTask:{type:{name:\"func\"},required:!1,description:\"\"},onPinTask:{type:{name:\"func\"},required:!1,description:\"\"}}};if(\"undefined\"!=typeof STORYBOOK_REACT_CLASSES){STORYBOOK_REACT_CLASSES[\"src/components/Task.js\"]={name:\"Task\",docgenInfo:Task.__docgenInfo,path:\"src/components/Task.js\"}}","map":{"version":3,"sources":["/Users/romanbogdanov/WebstormProjects/story-repo/src/components/Task.js"],"names":["React","Task","task","id","title","state","onArchiveTask","onPinTask","event","stopPropagation"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,uBAuBwB,4BAAM,SAAS,YAAf,E,CApBxB,cAAe,SAASC,CAAAA,IAAT,MAAwE,oBAAxDC,IAAwD,CAAhDC,EAAgD,WAAhDA,EAAgD,CAA5CC,KAA4C,WAA5CA,KAA4C,CAArCC,KAAqC,WAArCA,KAAqC,CAA5BC,aAA4B,MAA5BA,aAA4B,CAAbC,SAAa,MAAbA,SAAa,CACnF,mBACI,2BAAK,SAAS,qBAAeF,KAAf,CAAd,eACI,6BAAO,SAAS,CAAC,UAAjB,eACI,6BACI,IAAI,CAAC,UADT,CAEI,cAAc,CAAY,eAAV,GAAAA,KAFpB,CAGI,QAAQ,GAHZ,CAII,IAAI,CAAC,SAJT,EADJ,cAOI,4BAAM,SAAS,CAAC,iBAAhB,CAAkC,OAAO,CAAE,yBAAMC,CAAAA,aAAa,CAACH,EAAD,CAAnB,CAA3C,EAPJ,CADJ,cAUI,2BAAK,SAAS,CAAC,OAAf,eACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,KAAK,CAAEC,KAA1B,CAAiC,QAAQ,GAAzC,CAAiD,WAAW,CAAC,aAA7D,EADJ,CAVJ,cAcI,2BAAK,SAAS,CAAC,SAAf,CAAyB,OAAO,CAAE,iBAAAI,KAAK,QAAIA,CAAAA,KAAK,CAACC,eAAN,EAAJ,CAAvC,EACe,eAAV,GAAAJ,KAAK,gBACF;AACA,yBAAG,OAAO,CAAE,yBAAME,CAAAA,SAAS,CAACJ,EAAD,CAAf,CAAZ,QAHR,CAdJ,CAwBP,CA1BuBF,I","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Task({ task: { id, title, state }, onArchiveTask, onPinTask }) {\n    return (\n        <div className={`list-item ${state}`}>\n            <label className=\"checkbox\">\n                <input\n                    type=\"checkbox\"\n                    defaultChecked={state === 'TASK_ARCHIVED'}\n                    disabled={true}\n                    name=\"checked\"\n                />\n                <span className=\"checkbox-custom\" onClick={() => onArchiveTask(id)} />\n            </label>\n            <div className=\"title\">\n                <input type=\"text\" value={title} readOnly={true} placeholder=\"Input title\" />\n            </div>\n\n            <div className=\"actions\" onClick={event => event.stopPropagation()}>\n                {state !== 'TASK_ARCHIVED' && (\n                    // eslint-disable-next-line jsx-a11y/anchor-is-valid\n                    <a onClick={() => onPinTask(id)}>\n                        <span className={`icon-star`} />\n                    </a>\n                )}\n            </div>\n        </div>\n    );\n}\n\nTask.propTypes = {\n    task: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        state: PropTypes.string.isRequired,\n    }),\n    onArchiveTask: PropTypes.func,\n    onPinTask: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}