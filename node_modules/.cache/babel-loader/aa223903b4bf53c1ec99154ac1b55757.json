{"ast":null,"code":"import\"core-js/modules/es.array.concat\";import\"core-js/modules/es.array.filter\";import\"core-js/modules/es.array.map\";import\"core-js/modules/es.object.assign\";import _toConsumableArray from\"/Users/romanbogdanov/WebstormProjects/story-repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import Task from\"./Task\";import{connect}from\"react-redux\";import Provider from\"react-redux/es/components/Provider\";import{archiveTask,pinTask}from\"../lib/redux\";var _ref2=/*#__PURE__*/React.createElement(\"div\",{className:\"loading-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"glow-checkbox\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"glow-text\"},/*#__PURE__*/React.createElement(\"span\",null,\"Loading\"),\" \",/*#__PURE__*/React.createElement(\"span\",null,\"cool\"),\" \",/*#__PURE__*/React.createElement(\"span\",null,\"state\"))),_ref3=/*#__PURE__*/React.createElement(\"div\",{className:\"list-items\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wrapper-message\"},/*#__PURE__*/React.createElement(\"span\",{className:\"icon-check\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"title-message\"},\"You have no tasks\"),/*#__PURE__*/React.createElement(\"div\",{className:\"subtitle-message\"},\"Sit back and relax\")));function PureTaskList(_ref){var loading=_ref.loading,tasks=_ref.tasks,onPinTask=_ref.onPinTask,onArchiveTask=_ref.onArchiveTask,events={onPinTask:onPinTask,onArchiveTask:onArchiveTask},LoadingRow=_ref2;if(loading){return/*#__PURE__*/React.createElement(\"div\",{className:\"list-items\"},LoadingRow,LoadingRow,LoadingRow,LoadingRow,LoadingRow,LoadingRow)}if(0===tasks.length){return _ref3}var tasksInOrder=[].concat(_toConsumableArray(tasks.filter(function(t){return\"TASK_PINNED\"===t.state})),_toConsumableArray(tasks.filter(function(t){return\"TASK_PINNED\"!==t.state})));return/*#__PURE__*/React.createElement(\"div\",{className:\"list-items\"},tasksInOrder.map(function(task){return/*#__PURE__*/React.createElement(Task,Object.assign({key:task.id,task:task},events))}))}PureTaskList.displayName=\"PureTaskList\";PureTaskList.defaultProps={loading:!1};PureTaskList.__docgenInfo={description:\"\",methods:[],displayName:\"PureTaskList\",props:{loading:{defaultValue:{value:\"false\",computed:!1},type:{name:\"bool\"},required:!1,description:\"\"},tasks:{type:{name:\"arrayOf\",value:{name:\"custom\",raw:\"Task.propTypes.task\"}},required:!0,description:\"\"},onPinTask:{type:{name:\"func\"},required:!0,description:\"\"},onArchiveTask:{type:{name:\"func\"},required:!0,description:\"\"}}};export default connect(function(_ref4){var tasks=_ref4.tasks;return{tasks:tasks.filter(function(t){return\"TASK_INBOX\"===t.state||\"TASK_PINNED\"===t.state})}},function(dispatch){return{onArchiveTask:function onArchiveTask(id){return dispatch(archiveTask(id))},onPinTask:function onPinTask(id){return dispatch(pinTask(id))}}})(PureTaskList);if(\"undefined\"!=typeof STORYBOOK_REACT_CLASSES){STORYBOOK_REACT_CLASSES[\"src/components/TaskList.js\"]={name:\"PureTaskList\",docgenInfo:PureTaskList.__docgenInfo,path:\"src/components/TaskList.js\"}}","map":{"version":3,"sources":["/Users/romanbogdanov/WebstormProjects/story-repo/src/components/TaskList.js"],"names":["React","Task","connect","Provider","archiveTask","pinTask","PureTaskList","loading","tasks","onPinTask","onArchiveTask","events","LoadingRow","length","tasksInOrder","filter","t","state","map","task","id","defaultProps","dispatch"],"mappings":"6UAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,oCAArB,CACA,OAASC,WAAT,CAAsBC,OAAtB,KAAqC,cAArC,C,uBASQ,2BAAK,SAAS,CAAC,cAAf,eACI,4BAAM,SAAS,CAAC,eAAhB,EADJ,cAEI,4BAAM,SAAS,CAAC,WAAhB,eACJ,0CADI,kBACiB,uCADjB,kBACmC,wCADnC,CAFJ,C,oBAuBI,2BAAK,SAAS,CAAC,YAAf,eACI,2BAAK,SAAS,CAAC,iBAAf,eACI,4BAAM,SAAS,CAAC,YAAhB,EADJ,cAEI,2BAAK,SAAS,CAAC,eAAf,sBAFJ,cAGI,2BAAK,SAAS,CAAC,kBAAf,uBAHJ,CADJ,C,CA9BZ,QAASC,CAAAA,YAAT,MAAoE,IAA5CC,CAAAA,OAA4C,MAA5CA,OAA4C,CAAnCC,KAAmC,MAAnCA,KAAmC,CAA5BC,SAA4B,MAA5BA,SAA4B,CAAjBC,aAAiB,MAAjBA,aAAiB,CAC1DC,MAAM,CAAG,CACXF,SAAS,CAATA,SADW,CAEXC,aAAa,CAAbA,aAFW,CADiD,CAM1DE,UAAU,MANgD,CAehE,GAAIL,OAAJ,CAAa,CACT,mBACI,2BAAK,SAAS,CAAC,YAAf,EACKK,UADL,CAEKA,UAFL,CAGKA,UAHL,CAIKA,UAJL,CAKKA,UALL,CAMKA,UANL,CASP,CAED,GAAqB,CAAjB,GAAAJ,KAAK,CAACK,MAAV,CAAwB,CACpB,YASH,CAED,GAAMC,CAAAA,YAAY,8BACXN,KAAK,CAACO,MAAN,CAAa,SAAAC,CAAC,QAAgB,aAAZ,GAAAA,CAAC,CAACC,KAAN,CAAd,CADW,qBAEXT,KAAK,CAACO,MAAN,CAAa,SAAAC,CAAC,QAAgB,aAAZ,GAAAA,CAAC,CAACC,KAAN,CAAd,CAFW,EAAlB,CAKA,mBACI,2BAAK,SAAS,CAAC,YAAf,EACKH,YAAY,CAACI,GAAb,CAAiB,SAAAC,IAAI,qBAClB,oBAAC,IAAD,gBAAM,GAAG,CAAEA,IAAI,CAACC,EAAhB,CAAoB,IAAI,CAAED,IAA1B,EAAoCR,MAApC,EADkB,CAArB,CADL,CAMP,CApDQL,Y,4BA6DTA,YAAY,CAACe,YAAb,CAA4B,CACxBd,OAAO,GADiB,CAA5B,C,2ZAIA,cAAeL,CAAAA,OAAO,CAClB,mBAAGM,CAAAA,KAAH,OAAGA,KAAH,OAAgB,CACZA,KAAK,CAAEA,KAAK,CAACO,MAAN,CAAa,SAAAC,CAAC,QAAgB,YAAZ,GAAAA,CAAC,CAACC,KAAF,EAAwC,aAAZ,GAAAD,CAAC,CAACC,KAAlC,CAAd,CADK,CAAhB,CADkB,CAIlB,SAAAK,QAAQ,QAAK,CACTZ,aAAa,CAAE,uBAAAU,EAAE,QAAIE,CAAAA,QAAQ,CAAClB,WAAW,CAACgB,EAAD,CAAZ,CAAZ,CADR,CAETX,SAAS,CAAE,mBAAAW,EAAE,QAAIE,CAAAA,QAAQ,CAACjB,OAAO,CAACe,EAAD,CAAR,CAAZ,CAFJ,CAAL,CAJU,CAAP,CAQbd,YARa,CAAf,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Task from './Task';\nimport { connect } from 'react-redux';\nimport Provider from 'react-redux/es/components/Provider'\nimport { archiveTask, pinTask } from '../lib/redux';\n\nfunction PureTaskList({ loading, tasks, onPinTask, onArchiveTask }) {\n    const events = {\n        onPinTask,\n        onArchiveTask,\n    };\n\n    const LoadingRow = (\n        <div className=\"loading-item\">\n            <span className=\"glow-checkbox\" />\n            <span className=\"glow-text\">\n        <span>Loading</span> <span>cool</span> <span>state</span>\n      </span>\n        </div>\n    );\n\n    if (loading) {\n        return (\n            <div className=\"list-items\">\n                {LoadingRow}\n                {LoadingRow}\n                {LoadingRow}\n                {LoadingRow}\n                {LoadingRow}\n                {LoadingRow}\n            </div>\n        );\n    }\n\n    if (tasks.length === 0) {\n        return (\n            <div className=\"list-items\">\n                <div className=\"wrapper-message\">\n                    <span className=\"icon-check\" />\n                    <div className=\"title-message\">You have no tasks</div>\n                    <div className=\"subtitle-message\">Sit back and relax</div>\n                </div>\n            </div>\n        );\n    }\n\n    const tasksInOrder = [\n        ...tasks.filter(t => t.state === 'TASK_PINNED'),\n        ...tasks.filter(t => t.state !== 'TASK_PINNED'),\n    ];\n\n    return (\n        <div className=\"list-items\">\n            {tasksInOrder.map(task => (\n                <Task key={task.id} task={task} {...events} />\n            ))}\n        </div>\n    );\n}\n\nPureTaskList.propTypes = {\n    loading: PropTypes.bool,\n    tasks: PropTypes.arrayOf(Task.propTypes.task).isRequired,\n    onPinTask: PropTypes.func.isRequired,\n    onArchiveTask: PropTypes.func.isRequired,\n};\n\nPureTaskList.defaultProps = {\n    loading: false,\n};\n\nexport default connect(\n    ({ tasks }) => ({\n        tasks: tasks.filter(t => t.state === 'TASK_INBOX' || t.state === 'TASK_PINNED'),\n    }),\n    dispatch => ({\n        onArchiveTask: id => dispatch(archiveTask(id)),\n        onPinTask: id => dispatch(pinTask(id)),\n    })\n)(PureTaskList);\n"]},"metadata":{},"sourceType":"module"}